
'test
test =
+g(X) -f(Y);
+f(Y) $nok.

print test @-g(X).

head = -head(+seq(X1 X2 X3 X4) X1).
query = +head(-seq($1 $2 $3 $4) R) R.
print (query head).


'partial atom
patom = 
+patom($0);
+patom($1);
+patom($1:A) -patom(A);
+patom($0:A) -patom(A).

append = 
+append($e L2 L2);
+append(CAR:L1 L2 CAR:RES) -append(L1 L2 RES);

print append @-append($a:$b $b:$c R) R. 

'atom
atom = patom +atom($0);
+atom($1);
+atom(A:$1) -patom(A). 'unless this works.

'+atom((A:$1)) -atom($atom(A));
'+atom($atom(A:$0)) -atom($atom(A)). 'this will result in atoms with trailing 0s; need disequality to prevent.


'''
print patom @-patom($0).
print patom @-patom($1).
print patom @-patom($0:$1).
print patom @-patom($0:$1:$0). '<- divergent - variables do not range over lists by default
print patom @-patom($0:$1:$1). '<- divergent
'print patom @-patom($atom($0:$0:$0)). '<- divergent
'print patom @-patom($atom($0:$0:$1)). '<- divergent
'print patom @-patom($atom($1:$0:$1)). '<- divergent
'print patom @-patom($atom($1:$0:$0)). '<- divergent
'''
print atom @-atom($0).
print atom @-atom($1).
'print atom @-atom($atom($0:$1)).
'print atom @-atom($atom($0:$1:$0)).


